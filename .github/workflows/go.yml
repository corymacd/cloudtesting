name: Go

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
    tags: [ 'v*' ]

permissions:
  contents: write
  pull-requests: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true
    - name: Run Tests
      run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.txt

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3

  build:
    needs: [test, lint]
    if: github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true
    - run: |
        go build -v -ldflags "
          -X github.com/cloudtesting/internal/version.Version=${GITHUB_SHA::7}
          -X github.com/cloudtesting/internal/version.GitCommit=${GITHUB_SHA}
          -X github.com/cloudtesting/internal/version.BuildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ)
          -X github.com/cloudtesting/internal/version.BuildUser=${GITHUB_ACTOR}
          -X github.com/cloudtesting/internal/version.GoVersion=$(go version | cut -d' ' -f3)
        " ./...

  goreleaser:
    needs: [test, lint]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true
    - uses: goreleaser/goreleaser-action@v4
      with:
        distribution: goreleaser
        version: latest
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        LDFLAGS: "-X github.com/cloudtesting/internal/version.BuildUser=${GITHUB_ACTOR} -X github.com/cloudtesting/internal/version.BuildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ)" 